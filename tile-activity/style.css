/* ðŸŒ¿ Tile by Nehir â€“ Starter CSS
   This stylesheet adds simple styling to support your layout.
   You'll enhance the layout further using Bootstrap during the LiveLab.
*/

/* Set a soft textured background for the whole page */
body {
  background-image: url('../assets/offwhite-background.jpg');
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  font-family: sans-serif;
  padding: 16px; /* Adds space around edges on small screens */
}

/* Header polish */
h1 {
  padding: 8px;
  border-radius: 4px;
}

/* Limit image dimensions so tiles donâ€™t overflow the layout */
img {
  max-height: 250px;
  max-width: 250px;
}

/* This class makes the card image a perfect square and covers the area */
.square-card-img {
  aspect-ratio: 1 / 1;      /* Makes the image square */
  width: 100%;              /* Fills the card width */
  object-fit: cover;        /* Ensures the image covers the square area */
  border-radius: 0.5rem;    /* Optional: slightly rounded corners for a nice look */
}

/* Decorative frame for each card */
.border-tile {
  border: 6px double #bfa181;      /* Double border with a gold-like color */
  border-radius: 1rem;             /* Rounded corners for a softer look */
  box-shadow: 0 4px 16px rgba(191,161,129,0.08); /* Subtle shadow for depth */
  background: #f9f6f2;             /* Light background for contrast */
}

/* Optional caption style if you add labels under your tiles */
.tile-caption {
  text-align: center;
  margin-top: 8px;
  font-size: 14px;
  color: #444;
}

/* Adds a shadow and slight scale when hovering over a tile card */
.tile-hover {
  transition: transform 0.2s, box-shadow 0.2s;
}

/* On hover, the card jumps up a little and gets a shadow */
.tile-hover:hover {
  transform: scale(1.03) translateY(-12px); /* scale up and move up */
  box-shadow: 0 16px 32px rgba(0,0,0,0.18);
}

/* Smiley/frown face styles and animation */
.smiley-face {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 64px;
  height: 64px;
  transform: translate(-50%, -50%) scale(0.2);
  opacity: 0;
  pointer-events: none;
  z-index: 2;
  transition: transform 0.4s cubic-bezier(.68,-0.55,.27,1.55), opacity 0.2s;
  /* Will be shown/animated with classes below */
}

/* Show smiley with burst animation */
.smiley-burst {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1.2);
  animation: burst-pop 0.4s cubic-bezier(.68,-0.55,.27,1.55);
}

/* Hide smiley with frown and fade out */
.smiley-frown {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1.2);
  animation: frown-pop 0.25s cubic-bezier(.68,-0.55,.27,1.55);
}

/* After frown, fade out quickly */
.smiley-fade {
  opacity: 0;
  transition: opacity 0.15s;
}

/* Keyframes for burst pop */
@keyframes burst-pop {
  0% {
    transform: translate(-50%, -50%) scale(0.2);
    opacity: 0;
  }
  70% {
    transform: translate(-50%, -50%) scale(1.3);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.0);
    opacity: 1;
  }
}

/* Keyframes for frown pop (quick shake) */
@keyframes frown-pop {
  0% {
    transform: translate(-50%, -50%) scale(1.2) rotate(0deg);
  }
  30% {
    transform: translate(-50%, -50%) scale(1.2) rotate(-10deg);
  }
  60% {
    transform: translate(-50%, -50%) scale(1.2) rotate(10deg);
  }
  100% {
    transform: translate(-50%, -50%) scale(1.2) rotate(0deg);
  }
}

/* SVG face is centered and sized */
.smiley-face svg {
  width: 100%;
  height: 100%;
  display: block;
}

/* Star/confetti burst animation - bigger stars/confetti */
.star-burst {
  width: 0;
  height: 0;
  pointer-events: none;
  position: absolute;
  left: 50%;
  top: 50%;
  z-index: 10;
}

.burst-star, .burst-confetti {
  position: absolute;
  left: -18px;
  top: -18px;
  opacity: 0.85;
  animation: burst-move 0.7s cubic-bezier(.68,-0.55,.27,1.55) forwards;
}

.burst-star svg {
  width: 36px;
  height: 36px;
  display: block;
}

.burst-confetti {
  width: 20px;
  height: 32px;
  border-radius: 6px;
  transform: rotate(0deg);
}

/* Animate stars/confetti outward and fade */
@keyframes burst-move {
  0% {
    transform: rotate(var(--burst-angle, 0deg)) translate(0,0) scale(0.7);
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  100% {
    transform: rotate(var(--burst-angle, 0deg)) translate(var(--burst-distance, 80px),0) scale(1.1);
    opacity: 0;
  }
}
